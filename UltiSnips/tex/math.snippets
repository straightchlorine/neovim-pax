# general
snippet "((\s+)|(\$))cb" "general: curly braces" rA
`!p snip.rv = match.group(1)`\\{ ${1:${VISUAL:}} \\}$0
endsnippet

snippet "((\s+)|(\$))vll" "general: vetical line" rA
`!p snip.rv = match.group(1)`\vert ${1:${VISUAL:}}$0
endsnippet

snippet "((\s+)|(\$))gabs" "general: vetical line" rA
`!p snip.rv = match.group(1)`\vert ${1:${VISUAL:}} \vert$0
endsnippet

snippet "((\s+)|(\$))gfloor" "general: floor notation" rA
`!p snip.rv = match.group(1)`\lfloor ${1:${VISUAL:}} \lfloor$0
endsnippet

snippet "((\s+)|(\$))gceil" "general: ceiling notation" rA
`!p snip.rv = match.group(1)`\lceil ${1:${VISUAL:}} \rceil$0
endsnippet

snippet "((\s+)|(\$))gceil" "general: norm" rA
`!p snip.rv = match.group(1)`\lVert ${1:${VISUAL:}} \lVert$0
endsnippet

snippet "((\s+)|(\$))ovvl" "general: overline" rA
`!p snip.rv = match.group(1)`\overline{ ${1:${VISUAL:}} }$0
endsnippet

snippet "((\s+)|(\$))mtt" "general: text within math mode" rA
`!p snip.rv = match.group(1)`\text{${1:${VISUAL:}}}$0
endsnippet

# vectors
snippet "((\s+)|(\$))ihat" "vectors: ihat" rA
`!p snip.rv = match.group(1)`\hat{\mathbf{i}}$0
endsnippet

snippet "((\s+)|(\$))jhat" "vectors: jhat" rA
`!p snip.rv = match.group(1)`\hat{\mathbf{j}}$0
endsnippet

snippet "((\s+)|(\$))khat" "vectors: khat" rA
`!p snip.rv = match.group(1)`\hat{\mathbf{k}}$0
endsnippet

snippet "((\s+)|(\$))vv" "vectors: vector inside math mode" rA
`!p snip.rv = match.group(1)`\vec { ${1:${VISUAL:}} }$0
endsnippet

snippet "((\s+)|(\$))mvv" "vector: vector outside math mode" rA
`!p snip.rv = match.group(1)`\$ \vec { ${1:${VISUAL:}} } \$$0
endsnippet

# logic
snippet "((\s+)|(\$))liff" "logic: iff" rA
`!p snip.rv = match.group(1)`\Leftrightarrow ${1:${VISUAL:}}$0
endsnippet

snippet "((\s+)|(\$))lla" "logic: and" rA
`!p snip.rv = match.group(1)`\land ${1:${VISUAL:}}$0
endsnippet

snippet "((\s+)|(\$))llo" "logic: or" rA
`!p snip.rv = match.group(1)`\lor ${1:${VISUAL:}}$0
endsnippet

snippet "((\s+)|(\$))lli" "logic: implication" rA
`!p snip.rv = match.group(1)`\Rightarrow ${1:${VISUAL:}}$0
endsnippet

snippet "((\s+)|(\$))lln" "logic: negation" rA
`!p snip.rv = match.group(1)`\thicksim ${1:${VISUAL:}}$0
endsnippet

snippet "((\s+)|(\$))llfa" "logic: for all quantifier" rA
`!p snip.rv = match.group(1)`\forall_{${1:${VISUAL:}}}(${2:${VISUAL:}})$0
endsnippet

snippet "((\s+)|(\$))llex" "logic: exists quantifier" rA
`!p snip.rv = match.group(1)`\exists_{${1:${VISUAL:}}}(${2:${VISUAL:}})$0
endsnippet

# set theory
snippet "((\s+)|(\$))nulls" "set theory: empty set" rA
`!p snip.rv = match.group(1)`\varnothing$0
endsnippet

snippet "((\s+)|(\$))ssin" "set theory: element of" rA
 `!p snip.rv = match.group(1)`\in ${1:${VISUAL:}}
endsnippet

snippet "((\s+)|(\$))ssub" "set theory: subset of" rA
 `!p snip.rv = match.group(1)`\subset ${1:${VISUAL:}}
endsnippet

snippet "((\s+)|(\$))ssnin" "set theory: not in"
 `!p snip.rv = match.group(1)`\notin ${1:${VISUAL:}}
endsnippet

snippet "((\s+)|(\$))ssint" "set theory: intersection" rA
 `!p snip.rv = match.group(1)`\cap ${1:${VISUAL:}}
endsnippet

snippet "((\s*)|(\$))ssum" "set theory: sum" rA
 `!p snip.rv = match.group(1)`\cup ${1:${VISUAL:}}
endsnippet

snippet "((\s*)|(\$))ssdf" "set theory: difference" rA
 `!p snip.rv = match.group(1)`\setminus ${1:${VISUAL:}}
endsnippet

snippet "((\s*)|(\$))ssc" "set theory: complement" rA
`!p snip.rv = match.group(1)`^\complement ${1:${VISUAL:}}
endsnippet
